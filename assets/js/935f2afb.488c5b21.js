"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/music-meta-ontology/docs/intro","docId":"intro"},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Notation primer","href":"/music-meta-ontology/docs/tutorial-basics/diagrams_howto","docId":"tutorial-basics/diagrams_howto"},{"type":"link","label":"Create an Artist","href":"/music-meta-ontology/docs/tutorial-basics/create-an-artist","docId":"tutorial-basics/create-an-artist"},{"type":"link","label":"Create a Music Entity","href":"/music-meta-ontology/docs/tutorial-basics/create-music","docId":"tutorial-basics/create-music"},{"type":"link","label":"Create a Performance","href":"/music-meta-ontology/docs/tutorial-basics/music-performance","docId":"tutorial-basics/music-performance"},{"type":"link","label":"Links and provenance","href":"/music-meta-ontology/docs/tutorial-basics/links_provenance","docId":"tutorial-basics/links_provenance"},{"type":"link","label":"Congratulations!","href":"/music-meta-ontology/docs/tutorial-basics/congratulations","docId":"tutorial-basics/congratulations"}],"href":"/music-meta-ontology/docs/category/tutorial---basics"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview of pyMusicMeta","href":"/music-meta-ontology/docs/tutorial-extras/extra-a","docId":"tutorial-extras/extra-a"},{"type":"link","label":"Contributing to Music Meta","href":"/music-meta-ontology/docs/tutorial-extras/extra-b","docId":"tutorial-extras/extra-b"}],"href":"/music-meta-ontology/docs/category/tutorial---extras"}]},"docs":{"intro":{"id":"intro","title":"Introduction","description":"A music analyst, a computational musicologist, a music librarian, and a data engineer are working on a joint project.","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of the Music Meta Ontology. Here is a full example of Let it be to wrap up.","sidebar":"tutorialSidebar"},"tutorial-basics/create-an-artist":{"id":"tutorial-basics/create-an-artist","title":"Create an Artist","description":"To represent music creatives the class mmMusician), ensembles (mmMusicAlgorithm), as illustrated in the diagram below.","sidebar":"tutorialSidebar"},"tutorial-basics/create-music":{"id":"tutorial-basics/create-music","title":"Create a Music Entity","description":"The focal point of Music Meta is the mm:MusicEntity class (figure below).","sidebar":"tutorialSidebar"},"tutorial-basics/diagrams_howto":{"id":"tutorial-basics/diagrams_howto","title":"Notation primer","description":"Graffoo, a Graphical Framework for OWL Ontologies, is an open source tool that can be used to present the classes, properties and restrictions within OWL ontologies, or sub-sections of them, as clear and easy-to-understand diagrams. In sum, yellow rounded boxes denote classes, blue and green arrows are object and datatype properties respectively, purple circles denote individuals, and green polygons are datatypes.","sidebar":"tutorialSidebar"},"tutorial-basics/links_provenance":{"id":"tutorial-basics/links_provenance","title":"Links and provenance","description":"We propose a pattern based on RDF* [4] to describe the provenance at different levels (figure below).","sidebar":"tutorialSidebar"},"tutorial-basics/music-performance":{"id":"tutorial-basics/music-performance","title":"Create a Performance","description":"The realisation of a mmMusicalPerformance, describing a performance that can be either live (mmStudioPerformance).","sidebar":"tutorialSidebar"},"tutorial-extras/extra-a":{"id":"tutorial-extras/extra-a","title":"Overview of pyMusicMeta","description":"To facilitate the reuse of Music Meta and its data conversion into OWL/RDF Knowledge Graph, we developed a library to map arbitrary music metadata into RDF triples.","sidebar":"tutorialSidebar"},"tutorial-extras/extra-b":{"id":"tutorial-extras/extra-b","title":"Contributing to Music Meta","description":"Extending the ontology","sidebar":"tutorialSidebar"}}}')}}]);